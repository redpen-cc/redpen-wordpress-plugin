<?php
require_once 'mocks.php';
global $registered_hooks, $redpen_base_url;

require_once dirname(__FILE__) . '/../redpen.php';

class RedPenTest extends PHPUnit_Framework_TestCase {

    public function testBaseUrlIsUsingProxy() {
        global $redpen_base_url;
        $this->assertEquals($redpen_base_url, 'http://localhost/wp-content/plugins/redpen/proxy.php/');
    }

    public function testEditFormHookIsRegistered() {
        global $registered_hooks;
        $this->assertEquals('add_redpen_to_edit_form', $registered_hooks['edit_form_advanced']);
    }

    public function testJsPathIsCorrectlyResolved() {
        $expected_path = str_replace('/', '\\/', 'http://localhost/wp-content/plugins/redpen/js/plugin.js');
        $this->expectOutputRegex('/<script src="'.$expected_path.'"><\\/script>/');
        add_redpen_to_edit_form();
    }

    public function testRedPenJsPluginIsCreated() {
        global $redpen_base_url;
        $expected_url = str_replace('/', '\\/', $redpen_base_url);
        $this->expectOutputRegex('/redpenPlugin = new RedPenPlugin\("' . $expected_url . '"\)/');
        add_redpen_to_edit_form();
    }

    public function testRedPenPluginIsStartedOnTinyMCEInit() {
        global $registered_hooks;
        $this->assertEquals('start_redpen_on_tinymce_init', $registered_hooks['tiny_mce_before_init']);
        $settings = start_redpen_on_tinymce_init(array());
        $this->assertEquals('function(editor) {redpenPlugin.startValidation(jQuery("#content"), editor)}', $settings['setup']);
    }
}
?>